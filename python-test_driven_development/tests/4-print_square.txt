The ''matrix_divided'' module
==========================

Using ''matrix_divided''
---------------------

''matrix_divided()'' returns a new matrix after all elements have been divided. Must be an integer or a float.

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

The divisible cannot be zero.

::

    >>> matrix divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

The divisible must be an int or a float.

::

    >>> matrix divided([[1, 2, 3], [4, 5, 6]], 'div')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

It doesn't work if one of the lists is a different size then the other in the matrix.

::

    >>> matrix divided([[1, 2], [4, 5, 6]], 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

It also doesn't work if one of the elements is not a integer or float.

::

    >>> matrix divided([[1, 'integer'], [3, 4]], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats